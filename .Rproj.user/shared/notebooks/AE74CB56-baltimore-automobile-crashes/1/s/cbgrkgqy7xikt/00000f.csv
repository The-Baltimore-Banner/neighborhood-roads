"0",""
"0",""
"0","#Looking for more accidents in each road in each Baltimore neighborhood"
"0","grouped_accidents <- accidents%>%"
"0","  #excluding roads where a clean name does not exist"
"0","  filter(!is.na(clean_name)) %>%"
"0","  group_by(clean_name, neighborhood) %>%"
"0","  summarise(accidents = n()) %>%"
"0","  clean_names() %>%"
"0","  left_join(census) %>%"
"0","  mutate(accidents = as.double(accidents)) %>%"
"0","  mutate(accidents_per_1k = (accidents/(x2020_pop/1000))) %>%"
"0","  ungroup() %>%"
"0","  mutate(part = case_when("
"0","    clean_name %in% principal_arteries$clean_name ~ TRUE,"
"0","    TRUE ~ FALSE"
"0","  ))"
"1","[38;5;250m`summarise()` has grouped output by 'clean_name'. You can override using the `.groups` argument.[39m
"
"1","[38;5;250mJoining, by = ""neighborhood""[39m
"
"0","few_accidents <- grouped_accidents %>%"
"0","  filter(accidents < 5)"
"0","  "
"0",""
"0","  "
"0","  #removing accidents that list a street name but have locations that are due to bad location information"
"0","grouped_accidents <- grouped_accidents %>%"
"0","  filter(accidents > 5)"
"0",""
"0","quantile = quantile(grouped_accidents$x2020_pop, na.rm = TRUE)[2]"
"0","quantile"
"1"," 25% "
"1","
"
"1","1287 "
"1","
"
